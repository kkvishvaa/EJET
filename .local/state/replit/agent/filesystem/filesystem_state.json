{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nJetCharter is a premium private jet booking platform built with a modern full-stack architecture. The application provides a luxury-grade user experience for browsing aircraft, searching flights, tracking bookings, and managing reservations. It features a comprehensive aircraft fleet management system, real-time flight tracking capabilities, and a complete booking workflow with payment processing.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe client is built with React 18 and TypeScript, utilizing a component-based architecture with modern UI patterns:\n\n- **UI Framework**: React with shadcn/ui components for consistent design system\n- **Styling**: Tailwind CSS with custom CSS variables for theming and responsive design\n- **State Management**: TanStack Query for server state and caching\n- **Routing**: Wouter for lightweight client-side routing\n- **Form Handling**: React Hook Form with Zod validation for type-safe forms\n- **Build Tool**: Vite for fast development and optimized production builds\n\nThe frontend follows a page-based structure with reusable components for aircraft cards, destination displays, and booking forms. Pages include Home, Jets catalog, Search interface, Flight tracking, Deals, and Dashboard.\n\n## Backend Architecture\nThe server uses Node.js with Express in a RESTful API pattern:\n\n- **Runtime**: Node.js with TypeScript and ESM modules\n- **Framework**: Express.js with middleware for JSON parsing and CORS\n- **Storage**: In-memory storage implementation with interfaces for future database integration\n- **API Design**: RESTful endpoints for aircraft, flights, bookings, and destinations\n- **Validation**: Zod schemas shared between client and server for type safety\n\nThe backend implements a service layer pattern with storage abstraction, allowing for easy swapping of data persistence mechanisms.\n\n## Data Storage\nCurrently uses in-memory storage with plans for PostgreSQL integration:\n\n- **ORM**: Drizzle ORM configured for PostgreSQL with schema definitions\n- **Database**: Neon serverless PostgreSQL (configured but not yet connected)\n- **Schema**: Comprehensive tables for users, aircraft, flights, bookings, and destinations\n- **Migrations**: Drizzle Kit for database schema management\n\n## Development Workflow\nThe project uses a monorepo structure with shared TypeScript types and schemas:\n\n- **Shared Code**: Common types and validation schemas in `/shared` directory\n- **Development**: Hot reload with Vite for frontend and tsx for backend\n- **Build Process**: Separate build steps for client (Vite) and server (esbuild)\n- **Type Safety**: End-to-end TypeScript with shared interfaces\n\n# External Dependencies\n\n## Core Framework Dependencies\n- **React Ecosystem**: React 18, React DOM, React Hook Form, TanStack Query\n- **UI Components**: Radix UI primitives with shadcn/ui component library\n- **Styling**: Tailwind CSS with class-variance-authority for component variants\n- **Validation**: Zod for schema validation across client and server\n\n## Backend Services\n- **Database**: Neon serverless PostgreSQL with Drizzle ORM\n- **Session Management**: Connect-pg-simple for PostgreSQL session storage\n- **Development**: tsx for TypeScript execution, Vite for frontend bundling\n\n## Build and Development Tools\n- **TypeScript**: Full-stack type safety with shared configurations\n- **Build Tools**: Vite (frontend), esbuild (backend), PostCSS, Autoprefixer\n- **Development**: Replit-specific plugins for runtime error overlay and cartographer\n\n## Planned Integrations\nBased on the README files, the system is designed to integrate:\n- **Payment Processing**: Razorpay for secure payment handling\n- **Flight Tracking**: OpenSky Network API for real-time aircraft positions\n- **Weather Data**: Airport weather conditions and forecasts\n- **Image Assets**: Unsplash API for high-quality aircraft and destination photography\n\nThe architecture supports luxury private jet operations with features for fleet management, booking workflows, pricing calculations, and customer dashboards.","size_bytes":4118},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"fade-in\": {\n          \"0%\": {\n            opacity: \"0\",\n            transform: \"translateY(10px)\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n            transform: \"translateY(0)\",\n          },\n        },\n        \"scale-in\": {\n          \"0%\": {\n            opacity: \"0\",\n            transform: \"scale(0.9)\",\n          },\n          \"100%\": {\n            opacity: \"1\",\n            transform: \"scale(1)\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fade-in 0.5s ease-out\",\n        \"scale-in\": \"scale-in 0.3s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3297},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/README_1756724755366.md":{"content":"# ✈️ JetCharter - Premium Private Jet Booking Platform\r\n\r\nA comprehensive private jet booking website built with the MERN stack, featuring real-time flight tracking, advanced search capabilities, and luxury-grade user experience matching industry standards like Jettly.\r\n\r\n## 🌟 Features\r\n\r\n### Core Functionality\r\n- **Aircraft Fleet Management**: Browse 6+ premium aircraft with detailed specifications\r\n- **Flight Search Engine**: Advanced search with filters for routes, aircraft type, and passenger count\r\n- **Empty Leg Deals**: Discounted positioning flights with significant savings\r\n- **Real-time Flight Tracking**: Live aircraft positions using OpenSky Network API\r\n- **Booking System**: Complete reservation flow with passenger details\r\n- **Payment Processing**: Secure payments via Razorpay (test mode)\r\n- **Price Estimation**: Dynamic pricing with distance calculation and carbon offset\r\n- **Dashboard Analytics**: Comprehensive business metrics and KPIs\r\n- **Weather Integration**: Airport weather conditions and forecasts\r\n\r\n### Enhanced Experience\r\n- **Luxury UI/UX**: Professional design with gradients, animations, and responsive layouts\r\n- **Popular Destinations**: Curated travel destinations with rich imagery\r\n- **Aircraft Comparison**: Side-by-side comparison of jets with detailed specs\r\n- **Member Options**: Exclusive membership tiers with benefits\r\n- **Professional Images**: High-quality aircraft and destination photography via Unsplash\r\n\r\n## 🏗️ Architecture\r\n\r\n### Frontend (React 18)\r\n```\r\nclient/\r\n├── src/\r\n│   ├── pages/           # Main application pages\r\n│   │   ├── Home.js         # Landing page with hero section\r\n│   │   ├── Jets.js         # Aircraft catalog with filtering\r\n│   │   ├── FlightSearch.js # Advanced flight search interface\r\n│   │   ├── FlightTracker.js# Live flight tracking with maps\r\n│   │   ├── Booking.js      # Reservation system\r\n│   │   ├── Payment.js      # Payment processing\r\n│   │   ├── Dashboard.js    # Analytics dashboard\r\n│   │   ├── Compare.js      # Aircraft comparison tool\r\n│   │   ├── Deals.js        # Special offers and empty legs\r\n│   │   ├── Weather.js      # Weather information\r\n│   │   └── PriceEstimator.js # Pricing calculator\r\n│   ├── components/      # Reusable UI components\r\n│   │   ├── Navbar.js       # Navigation with active states\r\n│   │   └── FlightSearch.css # Comprehensive styling\r\n│   └── App.js           # Main routing and layout\r\n```\r\n\r\n### Backend (Node.js + Express)\r\n```\r\nserver/\r\n├── index.js             # Main server with all API endpoints\r\n├── data/               # Comprehensive dummy datasets\r\n│   ├── jets.js            # Enhanced aircraft database with images\r\n│   ├── flights.js         # Flight search data and routes\r\n│   ├── deals.js           # Special offers and promotions\r\n│   ├── bookings.js        # Reservation storage\r\n│   ├── dashboard.js       # Analytics and metrics\r\n│   ├── member.js          # Membership tier information\r\n│   └── weather.js         # Weather data structure\r\n└── utils/              # Business logic utilities\r\n    ├── estimatePrice.js   # Dynamic pricing engine\r\n    ├── calculateOffset.js # Carbon footprint calculator\r\n    └── processPayment.js  # Payment processing logic\r\n```\r\n\r\n## 🛡️ API Integration Strategy\r\n\r\n### Free Tier APIs (Production Ready)\r\n- **OpenSky Network**: Live flight tracking and aircraft positions\r\n- **OurAirports**: Airport information and codes\r\n- **OpenWeatherMap**: Weather conditions and forecasts\r\n- **OpenRouteService**: Distance calculations and routing\r\n\r\n### Paid APIs (Dummy Data Implementation)\r\n- **AviationStack**: Replaced with comprehensive flight search dummy data\r\n- **FlightStats**: Substituted with realistic flight schedules and status\r\n- **Aircraft Value Database**: Enhanced with detailed aircraft specifications\r\n\r\n*Note: All paid API integrations are commented in code with dummy data implementations that provide identical functionality for development and demonstration.*\r\n\r\n## 🚀 Getting Started\r\n\r\n### Prerequisites\r\n- Node.js 16+ and npm\r\n- Modern web browser\r\n\r\n### Installation\r\n\r\n1. **Clone the repository**\r\n```bash\r\ngit clone <repository-url>\r\ncd jet\r\n```\r\n\r\n2. **Install Backend Dependencies**\r\n```bash\r\ncd server\r\nnpm install\r\n```\r\n\r\n3. **Install Frontend Dependencies**\r\n```bash\r\ncd ../client\r\nnpm install\r\n```\r\n\r\n4. **Environment Configuration**\r\n```bash\r\n# Create server/.env (optional for free APIs)\r\nOPENSKY_API_URL=https://opensky-network.org/api\r\nRAZORPAY_KEY_ID=your_test_key\r\nRAZORPAY_KEY_SECRET=your_test_secret\r\n```\r\n\r\n5. **Start the Application**\r\n\r\nBackend Server:\r\n```bash\r\ncd server\r\nnode index.js\r\n# Server runs on http://localhost:5000\r\n```\r\n\r\nFrontend Application:\r\n```bash\r\ncd client\r\nnpm start\r\n# Client runs on http://localhost:3001\r\n```\r\n\r\n## 📱 Usage Guide\r\n\r\n### Flight Search\r\n1. Navigate to `/search`\r\n2. Enter departure/arrival airports (e.g., JFK, LAX)\r\n3. Select date, passengers, and aircraft category\r\n4. Browse results with detailed aircraft information\r\n5. View empty leg deals for discounted flights\r\n\r\n### Aircraft Management\r\n1. Visit `/jets` to browse the fleet\r\n2. Filter by category (Light, Midsize, Heavy)\r\n3. View detailed specifications and amenities\r\n4. Compare multiple aircraft side-by-side\r\n\r\n### Booking Process\r\n1. Select an aircraft or flight\r\n2. Complete passenger information form\r\n3. Review pricing with carbon offset options\r\n4. Process payment via Razorpay integration\r\n5. Receive booking confirmation\r\n\r\n### Flight Tracking\r\n1. Access `/track` for live flight monitoring\r\n2. View interactive map with aircraft positions\r\n3. Get real-time altitude, speed, and heading data\r\n4. Track specific flights by callsign\r\n\r\n## 🎨 Design Philosophy\r\n\r\n### Jettly-Inspired Excellence\r\n- **Premium Aesthetics**: Luxury gradients, professional typography, and sophisticated color schemes\r\n- **User Experience**: Intuitive navigation, smooth animations, and responsive design\r\n- **Industry Standards**: Professional imagery, detailed aircraft specs, and comprehensive search filters\r\n- **Performance**: Fast loading times, efficient API calls, and optimized rendering\r\n\r\n### Technical Excellence\r\n- **Modern React**: Hooks, functional components, and efficient state management\r\n- **ES6+ Backend**: Modern JavaScript with import/export modules\r\n- **RESTful APIs**: Well-structured endpoints with proper error handling\r\n- **Responsive Design**: Mobile-first approach with CSS Grid and Flexbox\r\n\r\n## 🔧 API Endpoints\r\n\r\n### Aircraft Management\r\n- `GET /api/jets` - Retrieve aircraft fleet with filtering\r\n- `GET /api/jets/:id` - Get specific aircraft details\r\n\r\n### Flight Operations\r\n- `GET /api/flights/search` - Advanced flight search with filters\r\n- `GET /api/flights/destinations` - Popular destinations\r\n- `GET /api/flights/empty-legs` - Discounted positioning flights\r\n- `GET /api/track` - Live flight tracking data\r\n\r\n### Booking & Payments\r\n- `POST /api/book` - Create new reservation\r\n- `GET /api/bookings` - Retrieve booking history\r\n- `POST /api/payment` - Process payment transactions\r\n\r\n### Analytics & Weather\r\n- `GET /api/dashboard` - Business metrics and KPIs\r\n- `GET /api/weather` - Airport weather conditions\r\n- `GET /api/estimate-price` - Dynamic pricing calculator\r\n\r\n## 🧪 Testing\r\n\r\n### Manual Testing Scenarios\r\n1. **Flight Search**: Test various airport combinations and filters\r\n2. **Aircraft Comparison**: Compare different jet categories\r\n3. **Booking Flow**: Complete end-to-end reservation process\r\n4. **Payment Integration**: Test Razorpay with dummy card numbers\r\n5. **Live Tracking**: Verify real-time flight data display\r\n\r\n### API Testing\r\n```bash\r\n# Test flight search\r\ncurl \"http://localhost:5000/api/flights/search?departure=JFK&arrival=LAX\"\r\n\r\n# Test aircraft catalog\r\ncurl \"http://localhost:5000/api/jets?category=heavy\"\r\n\r\n# Test live tracking\r\ncurl \"http://localhost:5000/api/track\"\r\n```\r\n\r\n## 🌐 Deployment\r\n\r\n### Production Considerations\r\n- Replace dummy APIs with actual paid services\r\n- Implement proper authentication and authorization\r\n- Add SSL certificates and security headers\r\n- Configure production database (MongoDB)\r\n- Set up monitoring and logging systems\r\n- Implement automated testing pipeline\r\n\r\n### Environment Variables\r\n```env\r\nNODE_ENV=production\r\nMONGODB_URI=mongodb://localhost:27017/jetcharter\r\nRAZORPAY_KEY_ID=rzp_live_...\r\nRAZORPAY_KEY_SECRET=...\r\nOPENSKY_API_KEY=...\r\nWEATHER_API_KEY=...\r\n```\r\n\r\n## 🤝 Contributing\r\n\r\nThis project demonstrates professional-grade development practices:\r\n- Clean, maintainable code structure\r\n- Comprehensive documentation\r\n- Realistic dummy data implementation\r\n- Industry-standard UI/UX patterns\r\n- Scalable architecture design\r\n\r\n## 📝 License\r\n\r\nPrivate project for demonstration purposes.\r\n\r\n## 🏆 Achievement Summary\r\n\r\n✅ **Complete MERN Stack Implementation**  \r\n✅ **Professional UI/UX Design**  \r\n✅ **Real-time Flight Tracking**  \r\n✅ **Advanced Search & Filtering**  \r\n✅ **Payment Integration**  \r\n✅ **Responsive Design**  \r\n✅ **Comprehensive API Architecture**  \r\n✅ **Industry-Standard Features**  \r\n✅ **Production-Ready Code Structure**  \r\n✅ **Professional Documentation**\r\n\r\n---\r\n\r\n*This project represents a complete, production-ready private jet booking platform that rivals industry leaders like Jettly, featuring comprehensive functionality, professional design, and scalable architecture.*\r\n","size_bytes":9662},"attached_assets/README_NEW_1756724755366.md":{"content":"# ✈️ JetCharter - Premium Private Jet Booking Platform\r\n\r\nA comprehensive private jet booking website built with the MERN stack, featuring real-time flight tracking, advanced search capabilities, and luxury-grade user experience matching industry standards like Jettly.\r\n\r\n## 🌟 Features\r\n\r\n### Core Functionality\r\n- **Aircraft Fleet Management**: Browse 6+ premium aircraft with detailed specifications\r\n- **Flight Search Engine**: Advanced search with filters for routes, aircraft type, and passenger count\r\n- **Empty Leg Deals**: Discounted positioning flights with significant savings\r\n- **Real-time Flight Tracking**: Live aircraft positions using OpenSky Network API\r\n- **Booking System**: Complete reservation flow with passenger details\r\n- **Payment Processing**: Secure payments via Razorpay (test mode)\r\n- **Price Estimation**: Dynamic pricing with distance calculation and carbon offset\r\n- **Dashboard Analytics**: Comprehensive business metrics and KPIs\r\n- **Weather Integration**: Airport weather conditions and forecasts\r\n\r\n### Enhanced Experience\r\n- **Luxury UI/UX**: Professional design with gradients, animations, and responsive layouts\r\n- **Popular Destinations**: Curated travel destinations with rich imagery\r\n- **Aircraft Comparison**: Side-by-side comparison of jets with detailed specs\r\n- **Member Options**: Exclusive membership tiers with benefits\r\n- **Professional Images**: High-quality aircraft and destination photography via Unsplash\r\n\r\n## 🏗️ Architecture\r\n\r\n### Frontend (React 18)\r\n```\r\nclient/\r\n├── src/\r\n│   ├── pages/           # Main application pages\r\n│   │   ├── Home.js         # Landing page with hero section\r\n│   │   ├── Jets.js         # Aircraft catalog with filtering\r\n│   │   ├── FlightSearch.js # Advanced flight search interface\r\n│   │   ├── FlightTracker.js# Live flight tracking with maps\r\n│   │   ├── Booking.js      # Reservation system\r\n│   │   ├── Payment.js      # Payment processing\r\n│   │   ├── Dashboard.js    # Analytics dashboard\r\n│   │   ├── Compare.js      # Aircraft comparison tool\r\n│   │   ├── Deals.js        # Special offers and empty legs\r\n│   │   ├── Weather.js      # Weather information\r\n│   │   └── PriceEstimator.js # Pricing calculator\r\n│   ├── components/      # Reusable UI components\r\n│   │   ├── Navbar.js       # Navigation with active states\r\n│   │   └── FlightSearch.css # Comprehensive styling\r\n│   └── App.js           # Main routing and layout\r\n```\r\n\r\n### Backend (Node.js + Express)\r\n```\r\nserver/\r\n├── index.js             # Main server with all API endpoints\r\n├── data/               # Comprehensive dummy datasets\r\n│   ├── jets.js            # Enhanced aircraft database with images\r\n│   ├── flights.js         # Flight search data and routes\r\n│   ├── deals.js           # Special offers and promotions\r\n│   ├── bookings.js        # Reservation storage\r\n│   ├── dashboard.js       # Analytics and metrics\r\n│   ├── member.js          # Membership tier information\r\n│   └── weather.js         # Weather data structure\r\n└── utils/              # Business logic utilities\r\n    ├── estimatePrice.js   # Dynamic pricing engine\r\n    ├── calculateOffset.js # Carbon footprint calculator\r\n    └── processPayment.js  # Payment processing logic\r\n```\r\n\r\n## 🛡️ API Integration Strategy\r\n\r\n### Free Tier APIs (Production Ready)\r\n- **OpenSky Network**: Live flight tracking and aircraft positions\r\n- **OurAirports**: Airport information and codes\r\n- **OpenWeatherMap**: Weather conditions and forecasts\r\n- **OpenRouteService**: Distance calculations and routing\r\n\r\n### Paid APIs (Dummy Data Implementation)\r\n- **AviationStack**: Replaced with comprehensive flight search dummy data\r\n- **FlightStats**: Substituted with realistic flight schedules and status\r\n- **Aircraft Value Database**: Enhanced with detailed aircraft specifications\r\n\r\n*Note: All paid API integrations are commented in code with dummy data implementations that provide identical functionality for development and demonstration.*\r\n\r\n## 🚀 Getting Started\r\n\r\n### Prerequisites\r\n- Node.js 16+ and npm\r\n- Modern web browser\r\n\r\n### Installation\r\n\r\n1. **Clone the repository**\r\n```bash\r\ngit clone <repository-url>\r\ncd jet\r\n```\r\n\r\n2. **Install Backend Dependencies**\r\n```bash\r\ncd server\r\nnpm install\r\n```\r\n\r\n3. **Install Frontend Dependencies**\r\n```bash\r\ncd ../client\r\nnpm install\r\n```\r\n\r\n4. **Environment Configuration**\r\n```bash\r\n# Create server/.env (optional for free APIs)\r\nOPENSKY_API_URL=https://opensky-network.org/api\r\nRAZORPAY_KEY_ID=your_test_key\r\nRAZORPAY_KEY_SECRET=your_test_secret\r\n```\r\n\r\n5. **Start the Application**\r\n\r\nBackend Server:\r\n```bash\r\ncd server\r\nnode index.js\r\n# Server runs on http://localhost:5000\r\n```\r\n\r\nFrontend Application:\r\n```bash\r\ncd client\r\nnpm start\r\n# Client runs on http://localhost:3001\r\n```\r\n\r\n## 📱 Usage Guide\r\n\r\n### Flight Search\r\n1. Navigate to `/search`\r\n2. Enter departure/arrival airports (e.g., JFK, LAX)\r\n3. Select date, passengers, and aircraft category\r\n4. Browse results with detailed aircraft information\r\n5. View empty leg deals for discounted flights\r\n\r\n### Aircraft Management\r\n1. Visit `/jets` to browse the fleet\r\n2. Filter by category (Light, Midsize, Heavy)\r\n3. View detailed specifications and amenities\r\n4. Compare multiple aircraft side-by-side\r\n\r\n### Booking Process\r\n1. Select an aircraft or flight\r\n2. Complete passenger information form\r\n3. Review pricing with carbon offset options\r\n4. Process payment via Razorpay integration\r\n5. Receive booking confirmation\r\n\r\n### Flight Tracking\r\n1. Access `/track` for live flight monitoring\r\n2. View interactive map with aircraft positions\r\n3. Get real-time altitude, speed, and heading data\r\n4. Track specific flights by callsign\r\n\r\n## 🎨 Design Philosophy\r\n\r\n### Jettly-Inspired Excellence\r\n- **Premium Aesthetics**: Luxury gradients, professional typography, and sophisticated color schemes\r\n- **User Experience**: Intuitive navigation, smooth animations, and responsive design\r\n- **Industry Standards**: Professional imagery, detailed aircraft specs, and comprehensive search filters\r\n- **Performance**: Fast loading times, efficient API calls, and optimized rendering\r\n\r\n### Technical Excellence\r\n- **Modern React**: Hooks, functional components, and efficient state management\r\n- **ES6+ Backend**: Modern JavaScript with import/export modules\r\n- **RESTful APIs**: Well-structured endpoints with proper error handling\r\n- **Responsive Design**: Mobile-first approach with CSS Grid and Flexbox\r\n\r\n## 🔧 API Endpoints\r\n\r\n### Aircraft Management\r\n- `GET /api/jets` - Retrieve aircraft fleet with filtering\r\n- `GET /api/jets/:id` - Get specific aircraft details\r\n\r\n### Flight Operations\r\n- `GET /api/flights/search` - Advanced flight search with filters\r\n- `GET /api/flights/destinations` - Popular destinations\r\n- `GET /api/flights/empty-legs` - Discounted positioning flights\r\n- `GET /api/track` - Live flight tracking data\r\n\r\n### Booking & Payments\r\n- `POST /api/book` - Create new reservation\r\n- `GET /api/bookings` - Retrieve booking history\r\n- `POST /api/payment` - Process payment transactions\r\n\r\n### Analytics & Weather\r\n- `GET /api/dashboard` - Business metrics and KPIs\r\n- `GET /api/weather` - Airport weather conditions\r\n- `GET /api/estimate-price` - Dynamic pricing calculator\r\n\r\n## 🧪 Testing\r\n\r\n### Manual Testing Scenarios\r\n1. **Flight Search**: Test various airport combinations and filters\r\n2. **Aircraft Comparison**: Compare different jet categories\r\n3. **Booking Flow**: Complete end-to-end reservation process\r\n4. **Payment Integration**: Test Razorpay with dummy card numbers\r\n5. **Live Tracking**: Verify real-time flight data display\r\n\r\n### API Testing\r\n```bash\r\n# Test flight search\r\ncurl \"http://localhost:5000/api/flights/search?departure=JFK&arrival=LAX\"\r\n\r\n# Test aircraft catalog\r\ncurl \"http://localhost:5000/api/jets?category=heavy\"\r\n\r\n# Test live tracking\r\ncurl \"http://localhost:5000/api/track\"\r\n```\r\n\r\n## 🌐 Deployment\r\n\r\n### Production Considerations\r\n- Replace dummy APIs with actual paid services\r\n- Implement proper authentication and authorization\r\n- Add SSL certificates and security headers\r\n- Configure production database (MongoDB)\r\n- Set up monitoring and logging systems\r\n- Implement automated testing pipeline\r\n\r\n### Environment Variables\r\n```env\r\nNODE_ENV=production\r\nMONGODB_URI=mongodb://localhost:27017/jetcharter\r\nRAZORPAY_KEY_ID=rzp_live_...\r\nRAZORPAY_KEY_SECRET=...\r\nOPENSKY_API_KEY=...\r\nWEATHER_API_KEY=...\r\n```\r\n\r\n## 🤝 Contributing\r\n\r\nThis project demonstrates professional-grade development practices:\r\n- Clean, maintainable code structure\r\n- Comprehensive documentation\r\n- Realistic dummy data implementation\r\n- Industry-standard UI/UX patterns\r\n- Scalable architecture design\r\n\r\n## 📝 License\r\n\r\nPrivate project for demonstration purposes.\r\n\r\n## 🏆 Achievement Summary\r\n\r\n✅ **Complete MERN Stack Implementation**  \r\n✅ **Professional UI/UX Design**  \r\n✅ **Real-time Flight Tracking**  \r\n✅ **Advanced Search & Filtering**  \r\n✅ **Payment Integration**  \r\n✅ **Responsive Design**  \r\n✅ **Comprehensive API Architecture**  \r\n✅ **Industry-Standard Features**  \r\n✅ **Production-Ready Code Structure**  \r\n✅ **Professional Documentation**\r\n\r\n---\r\n\r\n*This project represents a complete, production-ready private jet booking platform that rivals industry leaders like Jettly, featuring comprehensive functionality, professional design, and scalable architecture.*\r\n","size_bytes":9662},"attached_assets/postcss.config_1756724755366.js":{"content":"module.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":82},"attached_assets/tailwind.config_1756724755367.js":{"content":"/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n\n","size_bytes":128},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { flightSearchSchema, insertFlightSchema, insertBookingSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Aircraft routes\n  app.get(\"/api/aircraft\", async (req, res) => {\n    try {\n      const aircraft = await storage.getAircraft();\n      res.json(aircraft);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch aircraft\" });\n    }\n  });\n\n  app.get(\"/api/aircraft/:id\", async (req, res) => {\n    try {\n      const aircraft = await storage.getAircraftById(req.params.id);\n      if (!aircraft) {\n        return res.status(404).json({ message: \"Aircraft not found\" });\n      }\n      res.json(aircraft);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch aircraft\" });\n    }\n  });\n\n  app.get(\"/api/aircraft/category/:category\", async (req, res) => {\n    try {\n      const aircraft = await storage.getAircraftByCategory(req.params.category);\n      res.json(aircraft);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch aircraft by category\" });\n    }\n  });\n\n  // Flight search route\n  app.post(\"/api/flights/search\", async (req, res) => {\n    try {\n      const searchData = flightSearchSchema.parse(req.body);\n      const aircraft = await storage.searchFlights(searchData);\n      res.json(aircraft);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid search parameters\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to search flights\" });\n    }\n  });\n\n  // Flight routes\n  app.post(\"/api/flights\", async (req, res) => {\n    try {\n      const flightData = insertFlightSchema.parse(req.body);\n      const flight = await storage.createFlight(flightData);\n      res.status(201).json(flight);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid flight data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create flight\" });\n    }\n  });\n\n  app.get(\"/api/flights/user/:userId\", async (req, res) => {\n    try {\n      const flights = await storage.getFlightsByUser(req.params.userId);\n      res.json(flights);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch user flights\" });\n    }\n  });\n\n  app.get(\"/api/flights/:id\", async (req, res) => {\n    try {\n      const flight = await storage.getFlightById(req.params.id);\n      if (!flight) {\n        return res.status(404).json({ message: \"Flight not found\" });\n      }\n      res.json(flight);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch flight\" });\n    }\n  });\n\n  app.patch(\"/api/flights/:id/status\", async (req, res) => {\n    try {\n      const { status } = req.body;\n      const flight = await storage.updateFlightStatus(req.params.id, status);\n      if (!flight) {\n        return res.status(404).json({ message: \"Flight not found\" });\n      }\n      res.json(flight);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to update flight status\" });\n    }\n  });\n\n  // Booking routes\n  app.post(\"/api/bookings\", async (req, res) => {\n    try {\n      const bookingData = insertBookingSchema.parse(req.body);\n      const booking = await storage.createBooking(bookingData);\n      res.status(201).json(booking);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid booking data\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Failed to create booking\" });\n    }\n  });\n\n  app.get(\"/api/bookings/user/:userId\", async (req, res) => {\n    try {\n      const bookings = await storage.getBookingsByUser(req.params.userId);\n      res.json(bookings);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch user bookings\" });\n    }\n  });\n\n  app.patch(\"/api/bookings/:id/status\", async (req, res) => {\n    try {\n      const { status } = req.body;\n      const booking = await storage.updateBookingStatus(req.params.id, status);\n      if (!booking) {\n        return res.status(404).json({ message: \"Booking not found\" });\n      }\n      res.json(booking);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to update booking status\" });\n    }\n  });\n\n  // Destinations routes\n  app.get(\"/api/destinations\", async (req, res) => {\n    try {\n      const destinations = await storage.getDestinations();\n      res.json(destinations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch destinations\" });\n    }\n  });\n\n  app.get(\"/api/destinations/popular\", async (req, res) => {\n    try {\n      const destinations = await storage.getPopularDestinations();\n      res.json(destinations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch popular destinations\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":5102},"server/storage.ts":{"content":"import { type User, type InsertUser, type Aircraft, type InsertAircraft, type Flight, type InsertFlight, type Booking, type InsertBooking, type Destination, type InsertDestination, type FlightSearch } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n\n  // Aircraft\n  getAircraft(): Promise<Aircraft[]>;\n  getAircraftById(id: string): Promise<Aircraft | undefined>;\n  getAircraftByCategory(category: string): Promise<Aircraft[]>;\n  createAircraft(aircraft: InsertAircraft): Promise<Aircraft>;\n\n  // Flights\n  searchFlights(search: FlightSearch): Promise<Aircraft[]>;\n  createFlight(flight: InsertFlight): Promise<Flight>;\n  getFlightsByUser(userId: string): Promise<Flight[]>;\n  getFlightById(id: string): Promise<Flight | undefined>;\n  updateFlightStatus(id: string, status: string): Promise<Flight | undefined>;\n\n  // Bookings\n  createBooking(booking: InsertBooking): Promise<Booking>;\n  getBookingsByUser(userId: string): Promise<Booking[]>;\n  getBookingById(id: string): Promise<Booking | undefined>;\n  updateBookingStatus(id: string, status: string): Promise<Booking | undefined>;\n\n  // Destinations\n  getDestinations(): Promise<Destination[]>;\n  getPopularDestinations(): Promise<Destination[]>;\n  createDestination(destination: InsertDestination): Promise<Destination>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private aircraft: Map<string, Aircraft>;\n  private flights: Map<string, Flight>;\n  private bookings: Map<string, Booking>;\n  private destinations: Map<string, Destination>;\n\n  constructor() {\n    this.users = new Map();\n    this.aircraft = new Map();\n    this.flights = new Map();\n    this.bookings = new Map();\n    this.destinations = new Map();\n\n    // Initialize with sample data\n    this.initializeSampleData();\n  }\n\n  private initializeSampleData() {\n    // Sample Aircraft\n    const sampleAircraft: Aircraft[] = [\n      {\n        id: randomUUID(),\n        model: \"Citation CJ3+\",\n        category: \"light\",\n        manufacturer: \"Cessna\",\n        passengers: 7,\n        range: 2040,\n        speed: 478,\n        hourlyRate: \"3500.00\",\n        description: \"Perfect for short to medium-range flights with luxury amenities.\",\n        imageUrl: \"https://images.unsplash.com/photo-1556388158-158ea5ccacbd?ixlib=rb-4.0.3\",\n        available: true,\n      },\n      {\n        id: randomUUID(),\n        model: \"Hawker 800XP\",\n        category: \"midsize\",\n        manufacturer: \"Hawker Beechcraft\",\n        passengers: 8,\n        range: 2540,\n        speed: 514,\n        hourlyRate: \"4800.00\",\n        description: \"Ideal for coast-to-coast flights with spacious cabin comfort.\",\n        imageUrl: \"https://images.unsplash.com/photo-1540962351504-03099e0a754b?ixlib=rb-4.0.3\",\n        available: true,\n      },\n      {\n        id: randomUUID(),\n        model: \"Gulfstream G650\",\n        category: \"heavy\",\n        manufacturer: \"Gulfstream\",\n        passengers: 14,\n        range: 7000,\n        speed: 652,\n        hourlyRate: \"8500.00\",\n        description: \"Ultra-long-range luxury for international travel with unmatched comfort.\",\n        imageUrl: \"https://images.unsplash.com/photo-1583473848882-f9a5bc7fd2ee?ixlib=rb-4.0.3\",\n        available: true,\n      },\n    ];\n\n    sampleAircraft.forEach(aircraft => this.aircraft.set(aircraft.id, aircraft));\n\n    // Sample Destinations\n    const sampleDestinations: Destination[] = [\n      {\n        id: randomUUID(),\n        name: \"Miami International Airport\",\n        city: \"Miami\",\n        state: \"FL\",\n        country: \"USA\",\n        airportCode: \"MIA\",\n        description: \"Luxury beaches and vibrant nightlife\",\n        imageUrl: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3\",\n        popular: true,\n      },\n      {\n        id: randomUUID(),\n        name: \"Aspen/Pitkin County Airport\",\n        city: \"Aspen\",\n        state: \"CO\",\n        country: \"USA\",\n        airportCode: \"ASE\",\n        description: \"World-class skiing and mountain luxury\",\n        imageUrl: \"https://images.unsplash.com/photo-1551524164-687a55dd1126?ixlib=rb-4.0.3\",\n        popular: true,\n      },\n      {\n        id: randomUUID(),\n        name: \"Napa County Airport\",\n        city: \"Napa\",\n        state: \"CA\",\n        country: \"USA\",\n        airportCode: \"APC\",\n        description: \"Premium wine country experiences\",\n        imageUrl: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3\",\n        popular: true,\n      },\n    ];\n\n    sampleDestinations.forEach(destination => this.destinations.set(destination.id, destination));\n  }\n\n  // Users\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(user => user.username === username);\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(user => user.email === email);\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { \n      ...insertUser, \n      id,\n      createdAt: new Date(),\n    };\n    this.users.set(id, user);\n    return user;\n  }\n\n  // Aircraft\n  async getAircraft(): Promise<Aircraft[]> {\n    return Array.from(this.aircraft.values()).filter(aircraft => aircraft.available);\n  }\n\n  async getAircraftById(id: string): Promise<Aircraft | undefined> {\n    return this.aircraft.get(id);\n  }\n\n  async getAircraftByCategory(category: string): Promise<Aircraft[]> {\n    return Array.from(this.aircraft.values()).filter(\n      aircraft => aircraft.category === category && aircraft.available\n    );\n  }\n\n  async createAircraft(insertAircraft: InsertAircraft): Promise<Aircraft> {\n    const id = randomUUID();\n    const aircraft: Aircraft = { ...insertAircraft, id };\n    this.aircraft.set(id, aircraft);\n    return aircraft;\n  }\n\n  // Flights\n  async searchFlights(search: FlightSearch): Promise<Aircraft[]> {\n    let results = Array.from(this.aircraft.values()).filter(aircraft => aircraft.available);\n    \n    if (search.category) {\n      results = results.filter(aircraft => aircraft.category === search.category);\n    }\n    \n    results = results.filter(aircraft => aircraft.passengers >= search.passengers);\n    \n    return results;\n  }\n\n  async createFlight(insertFlight: InsertFlight): Promise<Flight> {\n    const id = randomUUID();\n    const flight: Flight = { \n      ...insertFlight, \n      id,\n      createdAt: new Date(),\n    };\n    this.flights.set(id, flight);\n    return flight;\n  }\n\n  async getFlightsByUser(userId: string): Promise<Flight[]> {\n    return Array.from(this.flights.values()).filter(flight => flight.userId === userId);\n  }\n\n  async getFlightById(id: string): Promise<Flight | undefined> {\n    return this.flights.get(id);\n  }\n\n  async updateFlightStatus(id: string, status: string): Promise<Flight | undefined> {\n    const flight = this.flights.get(id);\n    if (flight) {\n      flight.status = status;\n      this.flights.set(id, flight);\n    }\n    return flight;\n  }\n\n  // Bookings\n  async createBooking(insertBooking: InsertBooking): Promise<Booking> {\n    const id = randomUUID();\n    const booking: Booking = { \n      ...insertBooking, \n      id,\n      createdAt: new Date(),\n    };\n    this.bookings.set(id, booking);\n    return booking;\n  }\n\n  async getBookingsByUser(userId: string): Promise<Booking[]> {\n    return Array.from(this.bookings.values()).filter(booking => booking.userId === userId);\n  }\n\n  async getBookingById(id: string): Promise<Booking | undefined> {\n    return this.bookings.get(id);\n  }\n\n  async updateBookingStatus(id: string, status: string): Promise<Booking | undefined> {\n    const booking = this.bookings.get(id);\n    if (booking) {\n      booking.status = status;\n      this.bookings.set(id, booking);\n    }\n    return booking;\n  }\n\n  // Destinations\n  async getDestinations(): Promise<Destination[]> {\n    return Array.from(this.destinations.values());\n  }\n\n  async getPopularDestinations(): Promise<Destination[]> {\n    return Array.from(this.destinations.values()).filter(destination => destination.popular);\n  }\n\n  async createDestination(insertDestination: InsertDestination): Promise<Destination> {\n    const id = randomUUID();\n    const destination: Destination = { ...insertDestination, id };\n    this.destinations.set(id, destination);\n    return destination;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":8750},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  firstName: text(\"first_name\"),\n  lastName: text(\"last_name\"),\n  phone: text(\"phone\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const aircraft = pgTable(\"aircraft\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  model: text(\"model\").notNull(),\n  category: text(\"category\").notNull(), // light, midsize, heavy, ultra\n  manufacturer: text(\"manufacturer\").notNull(),\n  passengers: integer(\"passengers\").notNull(),\n  range: integer(\"range\").notNull(), // nautical miles\n  speed: integer(\"speed\").notNull(), // mph\n  hourlyRate: decimal(\"hourly_rate\", { precision: 10, scale: 2 }).notNull(),\n  description: text(\"description\"),\n  imageUrl: text(\"image_url\"),\n  available: boolean(\"available\").default(true),\n});\n\nexport const flights = pgTable(\"flights\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id),\n  aircraftId: varchar(\"aircraft_id\").references(() => aircraft.id),\n  departure: text(\"departure\").notNull(),\n  arrival: text(\"arrival\").notNull(),\n  departureDate: timestamp(\"departure_date\").notNull(),\n  returnDate: timestamp(\"return_date\"),\n  passengers: integer(\"passengers\").notNull(),\n  tripType: text(\"trip_type\").notNull(), // oneway, roundtrip\n  status: text(\"status\").default(\"pending\"), // pending, confirmed, completed, cancelled\n  totalCost: decimal(\"total_cost\", { precision: 10, scale: 2 }),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const bookings = pgTable(\"bookings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  flightId: varchar(\"flight_id\").references(() => flights.id),\n  userId: varchar(\"user_id\").references(() => users.id),\n  status: text(\"status\").default(\"pending\"), // pending, confirmed, paid, cancelled\n  paymentStatus: text(\"payment_status\").default(\"pending\"), // pending, completed, failed\n  totalAmount: decimal(\"total_amount\", { precision: 10, scale: 2 }).notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const destinations = pgTable(\"destinations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  city: text(\"city\").notNull(),\n  state: text(\"state\"),\n  country: text(\"country\").notNull(),\n  airportCode: text(\"airport_code\").notNull(),\n  description: text(\"description\"),\n  imageUrl: text(\"image_url\"),\n  popular: boolean(\"popular\").default(false),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertAircraftSchema = createInsertSchema(aircraft).omit({\n  id: true,\n});\n\nexport const insertFlightSchema = createInsertSchema(flights).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertBookingSchema = createInsertSchema(bookings).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertDestinationSchema = createInsertSchema(destinations).omit({\n  id: true,\n});\n\n// Search schemas\nexport const flightSearchSchema = z.object({\n  departure: z.string().min(1, \"Departure location is required\"),\n  arrival: z.string().min(1, \"Arrival location is required\"),\n  departureDate: z.string().min(1, \"Departure date is required\"),\n  returnDate: z.string().optional(),\n  passengers: z.number().min(1, \"At least 1 passenger required\").max(20, \"Maximum 20 passengers\"),\n  tripType: z.enum([\"oneway\", \"roundtrip\"]),\n  category: z.enum([\"light\", \"midsize\", \"heavy\", \"ultra\"]).optional(),\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\n\nexport type Aircraft = typeof aircraft.$inferSelect;\nexport type InsertAircraft = z.infer<typeof insertAircraftSchema>;\n\nexport type Flight = typeof flights.$inferSelect;\nexport type InsertFlight = z.infer<typeof insertFlightSchema>;\n\nexport type Booking = typeof bookings.$inferSelect;\nexport type InsertBooking = z.infer<typeof insertBookingSchema>;\n\nexport type Destination = typeof destinations.$inferSelect;\nexport type InsertDestination = z.infer<typeof insertDestinationSchema>;\n\nexport type FlightSearch = z.infer<typeof flightSearchSchema>;\n","size_bytes":4580},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/home\";\nimport Jets from \"@/pages/jets\";\nimport Search from \"@/pages/search\";\nimport Track from \"@/pages/track\";\nimport Deals from \"@/pages/deals\";\nimport Dashboard from \"@/pages/dashboard\";\nimport Navbar from \"@/components/layout/navbar\";\nimport Footer from \"@/components/layout/footer\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/jets\" component={Jets} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/track\" component={Track} />\n      <Route path=\"/deals\" component={Deals} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <div className=\"min-h-screen bg-background text-foreground\">\n          <Navbar />\n          <main>\n            <Router />\n          </main>\n          <Footer />\n        </div>\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1393},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(210, 40%, 98%);\n  --foreground: hsl(222.2, 84%, 4.9%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(222.2, 84%, 4.9%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(222.2, 84%, 4.9%);\n  --primary: hsl(215, 60%, 16%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(45, 93%, 47%);\n  --secondary-foreground: hsl(222.2, 84%, 4.9%);\n  --muted: hsl(210, 40%, 96%);\n  --muted-foreground: hsl(215.4, 16.3%, 46.9%);\n  --accent: hsl(199, 89%, 48%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(214.3, 31.8%, 91.4%);\n  --input: hsl(214.3, 31.8%, 91.4%);\n  --ring: hsl(215, 60%, 16%);\n  --chart-1: hsl(215, 60%, 16%);\n  --chart-2: hsl(199, 89%, 48%);\n  --chart-3: hsl(45, 93%, 47%);\n  --chart-4: hsl(215.4, 16.3%, 46.9%);\n  --chart-5: hsl(0, 84.2%, 60.2%);\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(222.2, 84%, 4.9%);\n  --sidebar-primary: hsl(215, 60%, 16%);\n  --sidebar-primary-foreground: hsl(210, 40%, 98%);\n  --sidebar-accent: hsl(210, 40%, 96%);\n  --sidebar-accent-foreground: hsl(215, 60%, 16%);\n  --sidebar-border: hsl(214.3, 31.8%, 91.4%);\n  --sidebar-ring: hsl(215, 60%, 16%);\n  --font-sans: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.75rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00), 0px 1px 2px -1px hsl(215, 60%, 16%, 0.00);\n  --shadow: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00), 0px 1px 2px -1px hsl(215, 60%, 16%, 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00), 0px 2px 4px -1px hsl(215, 60%, 16%, 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00), 0px 4px 6px -1px hsl(215, 60%, 16%, 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00), 0px 8px 10px -1px hsl(215, 60%, 16%, 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(215, 60%, 16%, 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(222.2, 84%, 4.9%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(222.2, 84%, 4.9%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222.2, 84%, 4.9%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(199, 89%, 48%);\n  --primary-foreground: hsl(222.2, 84%, 4.9%);\n  --secondary: hsl(45, 93%, 47%);\n  --secondary-foreground: hsl(222.2, 84%, 4.9%);\n  --muted: hsl(217.2, 32.6%, 17.5%);\n  --muted-foreground: hsl(215, 20.2%, 65.1%);\n  --accent: hsl(217.2, 32.6%, 17.5%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(217.2, 32.6%, 17.5%);\n  --input: hsl(217.2, 32.6%, 17.5%);\n  --ring: hsl(199, 89%, 48%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n.hero-bg {\n  background-image: linear-gradient(to right, rgba(30, 58, 138, 0.8), rgba(30, 41, 59, 0.6), transparent),\n                    url('https://images.unsplash.com/photo-1578926314433-e2789279f4aa?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2940&h=1080');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n","size_bytes":3673},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/aircraft-card.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Users, Navigation, Zap } from \"lucide-react\";\nimport type { Aircraft } from \"@shared/schema\";\n\ninterface AircraftCardProps {\n  aircraft: Aircraft;\n  onViewDetails?: (aircraft: Aircraft) => void;\n  onBook?: (aircraft: Aircraft) => void;\n}\n\nconst categoryColors = {\n  light: \"bg-secondary text-secondary-foreground\",\n  midsize: \"bg-accent text-accent-foreground\",\n  heavy: \"bg-primary text-primary-foreground\",\n  ultra: \"bg-gradient-to-r from-primary to-accent text-white\",\n};\n\nconst categoryLabels = {\n  light: \"Light Jet\",\n  midsize: \"Midsize Jet\",\n  heavy: \"Heavy Jet\",\n  ultra: \"Ultra Long Range\",\n};\n\nexport default function AircraftCard({ aircraft, onViewDetails, onBook }: AircraftCardProps) {\n  const handleViewDetails = () => {\n    onViewDetails?.(aircraft);\n  };\n\n  const handleBook = () => {\n    onBook?.(aircraft);\n  };\n\n  return (\n    <Card className=\"group overflow-hidden shadow-lg border border-border hover:shadow-xl transition-all duration-300\">\n      <div className=\"relative h-64 overflow-hidden\">\n        <img\n          src={aircraft.imageUrl || \"https://images.unsplash.com/photo-1556388158-158ea5ccacbd?ixlib=rb-4.0.3\"}\n          alt={`${aircraft.manufacturer} ${aircraft.model}`}\n          className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n        />\n        <div className=\"absolute top-4 left-4\">\n          <Badge className={categoryColors[aircraft.category as keyof typeof categoryColors]}>\n            {categoryLabels[aircraft.category as keyof typeof categoryLabels]}\n          </Badge>\n        </div>\n      </div>\n      \n      <CardContent className=\"p-6\">\n        <h3 className=\"text-xl font-bold text-foreground mb-2\" data-testid={`aircraft-model-${aircraft.id}`}>\n          {aircraft.manufacturer} {aircraft.model}\n        </h3>\n        <p className=\"text-muted-foreground mb-4\" data-testid={`aircraft-description-${aircraft.id}`}>\n          {aircraft.description}\n        </p>\n        \n        <div className=\"grid grid-cols-3 gap-4 mb-4 text-sm\">\n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center mb-1\">\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\n            </div>\n            <p className=\"font-medium text-foreground\" data-testid={`aircraft-passengers-${aircraft.id}`}>\n              {aircraft.passengers}\n            </p>\n            <p className=\"text-muted-foreground\">Passengers</p>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center mb-1\">\n              <Navigation className=\"h-4 w-4 text-muted-foreground\" />\n            </div>\n            <p className=\"font-medium text-foreground\" data-testid={`aircraft-range-${aircraft.id}`}>\n              {aircraft.range.toLocaleString()}\n            </p>\n            <p className=\"text-muted-foreground\">Range (nm)</p>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center mb-1\">\n              <Zap className=\"h-4 w-4 text-muted-foreground\" />\n            </div>\n            <p className=\"font-medium text-foreground\" data-testid={`aircraft-speed-${aircraft.id}`}>\n              {aircraft.speed}\n            </p>\n            <p className=\"text-muted-foreground\">Speed (mph)</p>\n          </div>\n        </div>\n        \n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-2xl font-bold text-primary\" data-testid={`aircraft-rate-${aircraft.id}`}>\n            ${parseFloat(aircraft.hourlyRate).toLocaleString()}/hr\n          </span>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              onClick={handleViewDetails}\n              data-testid={`button-view-details-${aircraft.id}`}\n            >\n              View Details\n            </Button>\n            <Button\n              onClick={handleBook}\n              className=\"bg-primary text-primary-foreground hover:bg-primary/90\"\n              data-testid={`button-book-${aircraft.id}`}\n            >\n              Book Now\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":4351},"client/src/components/destination-card.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport type { Destination } from \"@shared/schema\";\n\ninterface DestinationCardProps {\n  destination: Destination;\n  onExploreFlights?: (destination: Destination) => void;\n}\n\nexport default function DestinationCard({ destination, onExploreFlights }: DestinationCardProps) {\n  const handleExploreFlights = () => {\n    onExploreFlights?.(destination);\n  };\n\n  return (\n    <div className=\"relative group overflow-hidden rounded-xl shadow-lg hover:shadow-xl transition-all duration-300\">\n      <img\n        src={destination.imageUrl || \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3\"}\n        alt={`${destination.city}, ${destination.state ? destination.state + ', ' : ''}${destination.country}`}\n        className=\"w-full h-80 object-cover group-hover:scale-105 transition-transform duration-300\"\n      />\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\"></div>\n      <div className=\"absolute bottom-6 left-6 right-6\">\n        <h3 className=\"text-2xl font-bold text-white mb-2\" data-testid={`destination-name-${destination.id}`}>\n          {destination.city}, {destination.state && `${destination.state}, `}{destination.country}\n        </h3>\n        <p className=\"text-gray-200 mb-4\" data-testid={`destination-description-${destination.id}`}>\n          {destination.description}\n        </p>\n        <Button\n          onClick={handleExploreFlights}\n          className=\"bg-white/20 backdrop-blur-sm text-white border border-white/30 hover:bg-white/30 transition-all duration-200\"\n          data-testid={`button-explore-flights-${destination.id}`}\n        >\n          Explore Flights\n        </Button>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1761},"client/src/components/feature-card.tsx":{"content":"import { ReactNode } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\ninterface FeatureCardProps {\n  icon: ReactNode;\n  title: string;\n  description: string;\n  gradient?: string;\n}\n\nexport default function FeatureCard({ icon, title, description, gradient = \"from-primary to-accent\" }: FeatureCardProps) {\n  return (\n    <Card className=\"text-center shadow-sm border border-border hover:shadow-lg transition-all duration-200 group\">\n      <CardContent className=\"p-6\">\n        <div className={`w-16 h-16 bg-gradient-to-r ${gradient} rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-200`}>\n          {icon}\n        </div>\n        <h3 className=\"text-xl font-semibold text-foreground mb-2\">{title}</h3>\n        <p className=\"text-muted-foreground\">{description}</p>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":889},"client/src/components/flight-search-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { flightSearchSchema, type FlightSearch } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Search, PlaneIcon as PlaneTakeoff, PlaneIcon as PlaneLanding, Calendar, Users } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface FlightSearchFormProps {\n  onSearchResults?: (results: any[]) => void;\n}\n\nexport default function FlightSearchForm({ onSearchResults }: FlightSearchFormProps) {\n  const { toast } = useToast();\n  const [searchResults, setSearchResults] = useState<any[]>([]);\n\n  const form = useForm<FlightSearch>({\n    resolver: zodResolver(flightSearchSchema),\n    defaultValues: {\n      departure: \"\",\n      arrival: \"\",\n      departureDate: \"\",\n      returnDate: \"\",\n      passengers: 1,\n      tripType: \"oneway\",\n      category: undefined,\n    },\n  });\n\n  const searchMutation = useMutation({\n    mutationFn: async (data: FlightSearch) => {\n      const response = await apiRequest(\"POST\", \"/api/flights/search\", data);\n      return response.json();\n    },\n    onSuccess: (results) => {\n      setSearchResults(results);\n      onSearchResults?.(results);\n      toast({\n        title: \"Search Complete\",\n        description: `Found ${results.length} available aircraft`,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Search Failed\",\n        description: \"Unable to search flights. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: FlightSearch) => {\n    searchMutation.mutate(data);\n  };\n\n  const tripType = form.watch(\"tripType\");\n\n  return (\n    <Card className=\"w-full max-w-4xl mx-auto bg-white/95 backdrop-blur-md border-white/20 shadow-2xl\">\n      <CardHeader className=\"text-center\">\n        <CardTitle className=\"text-2xl font-bold text-foreground mb-2\">\n          Book Your Flight\n        </CardTitle>\n        <p className=\"text-muted-foreground\">\n          Find and book the perfect private jet for your journey\n        </p>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          {/* Trip Type */}\n          <div>\n            <Label className=\"text-sm font-medium text-foreground mb-3 block\">Trip Type</Label>\n            <RadioGroup\n              value={tripType}\n              onValueChange={(value) => form.setValue(\"tripType\", value as \"oneway\" | \"roundtrip\")}\n              className=\"flex gap-6\"\n            >\n              <div className=\"flex items-center space-x-2\">\n                <RadioGroupItem value=\"oneway\" id=\"oneway\" data-testid=\"radio-oneway\" />\n                <Label htmlFor=\"oneway\" className=\"font-medium cursor-pointer\">One Way</Label>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <RadioGroupItem value=\"roundtrip\" id=\"roundtrip\" data-testid=\"radio-roundtrip\" />\n                <Label htmlFor=\"roundtrip\" className=\"font-medium cursor-pointer\">Round Trip</Label>\n              </div>\n            </RadioGroup>\n          </div>\n\n          {/* From/To Airports */}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"departure\" className=\"text-sm font-medium text-foreground\">From</Label>\n              <div className=\"relative\">\n                <PlaneTakeoff className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5\" />\n                <Input\n                  id=\"departure\"\n                  placeholder=\"Departure airport\"\n                  className=\"pl-12 py-4 border-border focus:ring-2 focus:ring-primary focus:border-primary\"\n                  {...form.register(\"departure\")}\n                  data-testid=\"input-departure\"\n                />\n              </div>\n              {form.formState.errors.departure && (\n                <p className=\"text-sm text-destructive\">{form.formState.errors.departure.message}</p>\n              )}\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"arrival\" className=\"text-sm font-medium text-foreground\">To</Label>\n              <div className=\"relative\">\n                <PlaneLanding className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5\" />\n                <Input\n                  id=\"arrival\"\n                  placeholder=\"Arrival airport\"\n                  className=\"pl-12 py-4 border-border focus:ring-2 focus:ring-primary focus:border-primary\"\n                  {...form.register(\"arrival\")}\n                  data-testid=\"input-arrival\"\n                />\n              </div>\n              {form.formState.errors.arrival && (\n                <p className=\"text-sm text-destructive\">{form.formState.errors.arrival.message}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Date Selection */}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"departureDate\" className=\"text-sm font-medium text-foreground\">Departure Date</Label>\n              <div className=\"relative\">\n                <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5\" />\n                <Input\n                  id=\"departureDate\"\n                  type=\"date\"\n                  className=\"pl-12 py-4 border-border focus:ring-2 focus:ring-primary focus:border-primary\"\n                  {...form.register(\"departureDate\")}\n                  data-testid=\"input-departure-date\"\n                />\n              </div>\n              {form.formState.errors.departureDate && (\n                <p className=\"text-sm text-destructive\">{form.formState.errors.departureDate.message}</p>\n              )}\n            </div>\n            {tripType === \"roundtrip\" && (\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"returnDate\" className=\"text-sm font-medium text-foreground\">Return Date</Label>\n                <div className=\"relative\">\n                  <Calendar className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-5 w-5\" />\n                  <Input\n                    id=\"returnDate\"\n                    type=\"date\"\n                    className=\"pl-12 py-4 border-border focus:ring-2 focus:ring-primary focus:border-primary\"\n                    {...form.register(\"returnDate\")}\n                    data-testid=\"input-return-date\"\n                  />\n                </div>\n                {form.formState.errors.returnDate && (\n                  <p className=\"text-sm text-destructive\">{form.formState.errors.returnDate.message}</p>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Passengers and Aircraft */}\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label className=\"text-sm font-medium text-foreground\">Passengers</Label>\n              <Select\n                value={form.watch(\"passengers\").toString()}\n                onValueChange={(value) => form.setValue(\"passengers\", parseInt(value))}\n              >\n                <SelectTrigger className=\"py-4 border-border focus:ring-2 focus:ring-primary\" data-testid=\"select-passengers\">\n                  <div className=\"flex items-center\">\n                    <Users className=\"mr-3 h-5 w-5 text-muted-foreground\" />\n                    <SelectValue placeholder=\"Select passengers\" />\n                  </div>\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"1\">1 Passenger</SelectItem>\n                  <SelectItem value=\"2\">2 Passengers</SelectItem>\n                  <SelectItem value=\"3\">3 Passengers</SelectItem>\n                  <SelectItem value=\"4\">4 Passengers</SelectItem>\n                  <SelectItem value=\"5\">5 Passengers</SelectItem>\n                  <SelectItem value=\"6\">6 Passengers</SelectItem>\n                  <SelectItem value=\"7\">7 Passengers</SelectItem>\n                  <SelectItem value=\"8\">8 Passengers</SelectItem>\n                  <SelectItem value=\"9\">9 Passengers</SelectItem>\n                  <SelectItem value=\"10\">10+ Passengers</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"space-y-2\">\n              <Label className=\"text-sm font-medium text-foreground\">Aircraft Category</Label>\n              <Select\n                value={form.watch(\"category\") || \"any\"}\n                onValueChange={(value) => form.setValue(\"category\", value === \"any\" ? undefined : value as any)}\n              >\n                <SelectTrigger className=\"py-4 border-border focus:ring-2 focus:ring-primary\" data-testid=\"select-category\">\n                  <SelectValue placeholder=\"Any Category\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"any\">Any Category</SelectItem>\n                  <SelectItem value=\"light\">Light Jets</SelectItem>\n                  <SelectItem value=\"midsize\">Midsize Jets</SelectItem>\n                  <SelectItem value=\"heavy\">Heavy Jets</SelectItem>\n                  <SelectItem value=\"ultra\">Ultra Long Range</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <Button\n            type=\"submit\"\n            disabled={searchMutation.isPending}\n            className=\"w-full bg-gradient-to-r from-primary to-accent text-white py-4 px-6 font-semibold text-lg hover:from-primary/90 hover:to-accent/90 transition-all duration-200 transform hover:scale-[1.02] shadow-lg\"\n            data-testid=\"button-search-flights\"\n          >\n            <Search className=\"mr-2 h-5 w-5\" />\n            {searchMutation.isPending ? \"Searching...\" : \"Search Flights\"}\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":10487},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Calendar, \n  Plane, \n  CreditCard, \n  TrendingUp, \n  MapPin, \n  Clock,\n  DollarSign,\n  BarChart3\n} from \"lucide-react\";\nimport type { Flight, Booking } from \"@shared/schema\";\n\n// Mock user ID for demo purposes\nconst MOCK_USER_ID = \"user-123\";\n\nexport default function Dashboard() {\n  const { data: flights = [] } = useQuery<Flight[]>({\n    queryKey: [\"/api/flights/user\", MOCK_USER_ID],\n  });\n\n  const { data: bookings = [] } = useQuery<Booking[]>({\n    queryKey: [\"/api/bookings/user\", MOCK_USER_ID],\n  });\n\n  // Calculate statistics\n  const totalFlights = flights.length;\n  const upcomingFlights = flights.filter(f => new Date(f.departureDate) > new Date()).length;\n  const totalSpent = bookings.reduce((sum, booking) => sum + parseFloat(booking.totalAmount), 0);\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"confirmed\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      case \"pending\":\n        return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case \"completed\":\n        return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"cancelled\":\n        return \"bg-red-100 text-red-800 border-red-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-foreground mb-2\">Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Manage your flights, bookings, and account preferences\n          </p>\n        </div>\n\n        {/* Statistics Cards */}\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Flights</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"stat-total-flights\">\n                    {totalFlights}\n                  </p>\n                </div>\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <Plane className=\"h-6 w-6 text-primary\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Upcoming Flights</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"stat-upcoming-flights\">\n                    {upcomingFlights}\n                  </p>\n                </div>\n                <div className=\"w-12 h-12 bg-accent/10 rounded-full flex items-center justify-center\">\n                  <Calendar className=\"h-6 w-6 text-accent\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Total Spent</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"stat-total-spent\">\n                    ${totalSpent.toLocaleString()}\n                  </p>\n                </div>\n                <div className=\"w-12 h-12 bg-secondary/10 rounded-full flex items-center justify-center\">\n                  <DollarSign className=\"h-6 w-6 text-secondary\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Bookings</p>\n                  <p className=\"text-2xl font-bold text-foreground\" data-testid=\"stat-bookings\">\n                    {bookings.length}\n                  </p>\n                </div>\n                <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center\">\n                  <CreditCard className=\"h-6 w-6 text-green-600\" />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content */}\n        <Tabs defaultValue=\"flights\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full lg:w-auto lg:grid-cols-3\">\n            <TabsTrigger value=\"flights\" data-testid=\"tab-flights\">My Flights</TabsTrigger>\n            <TabsTrigger value=\"bookings\" data-testid=\"tab-bookings\">Bookings</TabsTrigger>\n            <TabsTrigger value=\"analytics\" data-testid=\"tab-analytics\">Analytics</TabsTrigger>\n          </TabsList>\n\n          {/* Flights Tab */}\n          <TabsContent value=\"flights\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Flights</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {flights.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <Plane className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">No Flights Yet</h3>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Book your first private jet flight to see it here.\n                    </p>\n                    <Button data-testid=\"button-book-first-flight\">Book Your First Flight</Button>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {flights.slice(0, 5).map((flight) => (\n                      <div\n                        key={flight.id}\n                        className=\"flex items-center justify-between p-4 border border-border rounded-lg hover:bg-muted/50 transition-colors\"\n                      >\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center\">\n                            <Plane className=\"h-5 w-5 text-primary\" />\n                          </div>\n                          <div>\n                            <div className=\"flex items-center gap-2\">\n                              <span className=\"font-medium\" data-testid={`flight-route-${flight.id}`}>\n                                {flight.departure} → {flight.arrival}\n                              </span>\n                              <Badge className={getStatusColor(flight.status || \"pending\")}>\n                                {flight.status?.toUpperCase() || \"PENDING\"}\n                              </Badge>\n                            </div>\n                            <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                              <span data-testid={`flight-date-${flight.id}`}>\n                                {new Date(flight.departureDate).toLocaleDateString()}\n                              </span>\n                              <span>{flight.passengers} passengers</span>\n                              <span className=\"capitalize\">{flight.tripType === \"oneway\" ? \"One Way\" : \"Round Trip\"}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          data-testid={`button-track-flight-${flight.id}`}\n                        >\n                          Track Flight\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Bookings Tab */}\n          <TabsContent value=\"bookings\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Booking History</CardTitle>\n              </CardHeader>\n              <CardContent>\n                {bookings.length === 0 ? (\n                  <div className=\"text-center py-8\">\n                    <CreditCard className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">No Bookings Yet</h3>\n                    <p className=\"text-muted-foreground\">\n                      Your booking history will appear here once you complete a reservation.\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {bookings.map((booking) => (\n                      <div\n                        key={booking.id}\n                        className=\"flex items-center justify-between p-4 border border-border rounded-lg\"\n                      >\n                        <div className=\"flex items-center gap-4\">\n                          <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                            <CreditCard className=\"h-5 w-5 text-green-600\" />\n                          </div>\n                          <div>\n                            <div className=\"flex items-center gap-2\">\n                              <span className=\"font-medium\" data-testid={`booking-id-${booking.id}`}>\n                                Booking #{booking.id.slice(-8)}\n                              </span>\n                              <Badge className={getStatusColor(booking.status || \"pending\")}>\n                                {booking.status?.toUpperCase() || \"PENDING\"}\n                              </Badge>\n                            </div>\n                            <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                              <span data-testid={`booking-amount-${booking.id}`}>\n                                ${parseFloat(booking.totalAmount).toLocaleString()}\n                              </span>\n                              <span>{booking.paymentStatus}</span>\n                              <span data-testid={`booking-date-${booking.id}`}>\n                                {new Date(booking.createdAt!).toLocaleDateString()}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          data-testid={`button-view-booking-${booking.id}`}\n                        >\n                          View Details\n                        </Button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Analytics Tab */}\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <BarChart3 className=\"h-5 w-5\" />\n                    Spending Overview\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Total Spent</span>\n                      <span className=\"font-semibold\">${totalSpent.toLocaleString()}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Average per Flight</span>\n                      <span className=\"font-semibold\">\n                        ${totalFlights > 0 ? (totalSpent / totalFlights).toLocaleString() : \"0\"}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">This Year</span>\n                      <span className=\"font-semibold\">${totalSpent.toLocaleString()}</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <TrendingUp className=\"h-5 w-5\" />\n                    Flight Statistics\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Total Flights</span>\n                      <span className=\"font-semibold\">{totalFlights}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Upcoming</span>\n                      <span className=\"font-semibold\">{upcomingFlights}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-muted-foreground\">Completed</span>\n                      <span className=\"font-semibold\">\n                        {flights.filter(f => f.status === \"completed\").length}\n                      </span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Activity</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {flights.slice(0, 3).map((flight, index) => (\n                    <div key={flight.id} className=\"flex items-start gap-3\">\n                      <div className=\"w-2 h-2 bg-primary rounded-full mt-2\"></div>\n                      <div>\n                        <p className=\"font-medium\">\n                          Flight {flight.departure} → {flight.arrival}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {flight.status === \"completed\" ? \"Completed\" : \"Scheduled\"} • {\" \"}\n                          {new Date(flight.departureDate).toLocaleDateString()}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                  {flights.length === 0 && (\n                    <p className=\"text-muted-foreground text-center py-4\">\n                      No recent activity to display.\n                    </p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n","size_bytes":15503},"client/src/pages/deals.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport AircraftCard from \"@/components/aircraft-card\";\nimport { Percent, Clock, MapPin, Plane } from \"lucide-react\";\nimport type { Aircraft } from \"@shared/schema\";\n\n// Mock empty leg deals data structure\ninterface EmptyLegDeal {\n  id: string;\n  aircraft: Aircraft;\n  departure: string;\n  arrival: string;\n  departureDate: string;\n  originalPrice: number;\n  dealPrice: number;\n  discount: number;\n  seatsAvailable: number;\n}\n\nexport default function Deals() {\n  const { data: aircraft = [] } = useQuery<Aircraft[]>({\n    queryKey: [\"/api/aircraft\"],\n  });\n\n  // Generate mock empty leg deals from available aircraft\n  const emptyLegDeals: EmptyLegDeal[] = aircraft.slice(0, 6).map((jet, index) => {\n    const routes = [\n      { departure: \"New York (JFK)\", arrival: \"Miami (MIA)\" },\n      { departure: \"Los Angeles (LAX)\", arrival: \"Las Vegas (LAS)\" },\n      { departure: \"Chicago (ORD)\", arrival: \"Aspen (ASE)\" },\n      { departure: \"Dallas (DFW)\", arrival: \"Austin (AUS)\" },\n      { departure: \"Boston (BOS)\", arrival: \"Nantucket (ACK)\" },\n      { departure: \"San Francisco (SFO)\", arrival: \"Napa (APC)\" },\n    ];\n    \n    const route = routes[index] || routes[0];\n    const originalPrice = parseFloat(jet.hourlyRate) * 3; // 3-hour flight\n    const discount = 30 + (index * 10); // 30-70% discount\n    const dealPrice = originalPrice * (1 - discount / 100);\n    \n    return {\n      id: `deal-${jet.id}`,\n      aircraft: jet,\n      ...route,\n      departureDate: new Date(Date.now() + (index + 1) * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n      originalPrice,\n      dealPrice,\n      discount,\n      seatsAvailable: Math.floor(jet.passengers * 0.7),\n    };\n  });\n\n  return (\n    <div className=\"min-h-screen bg-background py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Empty Leg Deals\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Save up to 70% on private jet flights with our exclusive empty leg deals. \n            Book these one-way flights at incredible discounts.\n          </p>\n        </div>\n\n        {/* Info Card */}\n        <Card className=\"mb-8 bg-gradient-to-r from-primary/5 to-accent/5 border-primary/20\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-start gap-4\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                <Percent className=\"h-6 w-6 text-primary\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-foreground mb-2\">What are Empty Leg Deals?</h3>\n                <p className=\"text-muted-foreground\">\n                  Empty leg flights occur when private jets need to return to their home base or reposition for the next charter. \n                  These flights are offered at significant discounts, sometimes up to 70% off regular charter prices.\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Deals Grid */}\n        {emptyLegDeals.length === 0 ? (\n          <Card className=\"p-12 text-center\">\n            <div className=\"text-muted-foreground\">\n              <Plane className=\"h-16 w-16 mx-auto mb-4 opacity-50\" />\n              <h3 className=\"text-xl font-semibold mb-2\">No Deals Available</h3>\n              <p>Check back soon for new empty leg opportunities.</p>\n            </div>\n          </Card>\n        ) : (\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {emptyLegDeals.map((deal) => (\n              <Card key={deal.id} className=\"group overflow-hidden shadow-lg border border-border hover:shadow-xl transition-all duration-300\">\n                {/* Aircraft Image */}\n                <div className=\"relative h-48 overflow-hidden\">\n                  <img\n                    src={deal.aircraft.imageUrl || \"https://images.unsplash.com/photo-1556388158-158ea5ccacbd?ixlib=rb-4.0.3\"}\n                    alt={`${deal.aircraft.manufacturer} ${deal.aircraft.model}`}\n                    className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                  />\n                  <div className=\"absolute top-4 left-4\">\n                    <Badge className=\"bg-red-500 text-white\">\n                      -{deal.discount}% OFF\n                    </Badge>\n                  </div>\n                  <div className=\"absolute top-4 right-4\">\n                    <Badge variant=\"secondary\">\n                      Empty Leg\n                    </Badge>\n                  </div>\n                </div>\n                \n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-bold text-foreground mb-2\" data-testid={`deal-aircraft-${deal.id}`}>\n                    {deal.aircraft.manufacturer} {deal.aircraft.model}\n                  </h3>\n                  \n                  {/* Route */}\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm text-muted-foreground\" data-testid={`deal-route-${deal.id}`}>\n                      {deal.departure} → {deal.arrival}\n                    </span>\n                  </div>\n                  \n                  {/* Date */}\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"text-sm text-muted-foreground\" data-testid={`deal-date-${deal.id}`}>\n                      {new Date(deal.departureDate).toLocaleDateString('en-US', { \n                        weekday: 'long', \n                        year: 'numeric', \n                        month: 'long', \n                        day: 'numeric' \n                      })}\n                    </span>\n                  </div>\n                  \n                  {/* Pricing */}\n                  <div className=\"mb-4\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm text-muted-foreground line-through\" data-testid={`deal-original-price-${deal.id}`}>\n                        ${deal.originalPrice.toLocaleString()}\n                      </span>\n                      <span className=\"text-2xl font-bold text-primary\" data-testid={`deal-price-${deal.id}`}>\n                        ${deal.dealPrice.toLocaleString()}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {deal.seatsAvailable} seats available\n                    </p>\n                  </div>\n                  \n                  <Button \n                    className=\"w-full bg-gradient-to-r from-primary to-accent text-white hover:from-primary/90 hover:to-accent/90\"\n                    data-testid={`button-book-deal-${deal.id}`}\n                  >\n                    Book This Deal\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n\n        {/* CTA Section */}\n        <Card className=\"mt-12 bg-gradient-to-r from-primary to-accent text-white\">\n          <CardContent className=\"p-8 text-center\">\n            <h2 className=\"text-2xl font-bold mb-4\">Don't Miss Out on Future Deals</h2>\n            <p className=\"text-white/90 mb-6 max-w-2xl mx-auto\">\n              Subscribe to our deal alerts and be the first to know about new empty leg opportunities. \n              Get exclusive access to the best private jet deals.\n            </p>\n            <Button \n              variant=\"secondary\" \n              className=\"bg-white text-primary hover:bg-white/90\"\n              data-testid=\"button-subscribe-deals\"\n            >\n              Subscribe to Deal Alerts\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8344},"client/src/pages/home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport FlightSearchForm from \"@/components/flight-search-form\";\nimport AircraftCard from \"@/components/aircraft-card\";\nimport DestinationCard from \"@/components/destination-card\";\nimport FeatureCard from \"@/components/feature-card\";\nimport { Clock, Shield, Route, Award, Search, MapPin, CreditCard, BarChart3 } from \"lucide-react\";\nimport type { Aircraft, Destination } from \"@shared/schema\";\n\nexport default function Home() {\n  const { data: aircraft = [] } = useQuery<Aircraft[]>({\n    queryKey: [\"/api/aircraft\"],\n  });\n\n  const { data: destinations = [] } = useQuery<Destination[]>({\n    queryKey: [\"/api/destinations/popular\"],\n  });\n\n  const featuredAircraft = aircraft.slice(0, 3);\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"relative min-h-screen flex items-center justify-center overflow-hidden hero-bg\">\n        <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center lg:text-left\">\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"space-y-8 animate-fade-in\">\n              <div className=\"space-y-4\">\n                <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-white leading-tight\">\n                  Luxury Private Jet\n                  <span className=\"block bg-gradient-to-r from-secondary to-accent bg-clip-text text-transparent\">\n                    Charter Service\n                  </span>\n                </h1>\n                <p className=\"text-xl lg:text-2xl text-gray-200 max-w-2xl\">\n                  Experience unparalleled luxury and convenience with our premium private jet fleet. \n                  Book your next flight in minutes.\n                </p>\n              </div>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Button\n                  className=\"bg-secondary text-secondary-foreground px-8 py-4 text-lg font-semibold hover:bg-secondary/90 transition-all duration-200 transform hover:scale-105\"\n                  data-testid=\"button-explore-fleet\"\n                >\n                  Explore Fleet\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  className=\"bg-white/10 backdrop-blur-sm text-white border-white/20 px-8 py-4 text-lg font-semibold hover:bg-white/20 transition-all duration-200\"\n                  data-testid=\"button-watch-video\"\n                >\n                  Watch Video\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"animate-scale-in\">\n              <FlightSearchForm />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n              Why Choose JetCharter\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Experience the ultimate in luxury travel with our comprehensive private jet services\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <FeatureCard\n              icon={<Clock className=\"h-8 w-8 text-white\" />}\n              title=\"24/7 Availability\"\n              description=\"Book flights anytime with our round-the-clock booking system and customer support.\"\n              gradient=\"from-primary to-accent\"\n            />\n            <FeatureCard\n              icon={<Shield className=\"h-8 w-8 text-white\" />}\n              title=\"Safety First\"\n              description=\"All aircraft undergo rigorous safety inspections and our pilots are highly experienced.\"\n              gradient=\"from-secondary to-accent\"\n            />\n            <FeatureCard\n              icon={<Route className=\"h-8 w-8 text-white\" />}\n              title=\"Global Network\"\n              description=\"Access to thousands of airports worldwide with flexible routing options.\"\n              gradient=\"from-accent to-primary\"\n            />\n            <FeatureCard\n              icon={<Award className=\"h-8 w-8 text-white\" />}\n              title=\"Luxury Service\"\n              description=\"Premium amenities and personalized service for an unforgettable experience.\"\n              gradient=\"from-primary to-secondary\"\n            />\n          </div>\n        </div>\n      </section>\n\n      {/* Aircraft Fleet */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n              Our Premium Fleet\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Choose from our carefully curated selection of luxury aircraft\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {featuredAircraft.map((jet) => (\n              <AircraftCard key={jet.id} aircraft={jet} />\n            ))}\n          </div>\n          \n          <div className=\"text-center mt-12\">\n            <Button\n              className=\"bg-gradient-to-r from-primary to-accent text-white px-8 py-4 text-lg font-semibold hover:from-primary/90 hover:to-accent/90 transition-all duration-200 transform hover:scale-105\"\n              data-testid=\"button-view-complete-fleet\"\n            >\n              View Complete Fleet\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Popular Destinations */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4\">\n              Popular Destinations\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Discover exclusive destinations accessed through our premium private jet service\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {destinations.map((destination) => (\n              <DestinationCard key={destination.id} destination={destination} />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Services Overview */}\n      <section className=\"py-20\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"space-y-8\">\n              <div>\n                <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-6\">\n                  Complete Private Aviation Solutions\n                </h2>\n                <p className=\"text-xl text-muted-foreground\">\n                  From flight search to real-time tracking, we provide a comprehensive platform \n                  for all your private jet travel needs.\n                </p>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-primary to-accent rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <Search className=\"text-white h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">Advanced Flight Search</h3>\n                    <p className=\"text-muted-foreground\">Filter by aircraft type, passenger count, and route preferences to find the perfect flight.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-secondary to-accent rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <MapPin className=\"text-white h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">Real-time Flight Tracking</h3>\n                    <p className=\"text-muted-foreground\">Monitor your flight status with live tracking and receive updates throughout your journey.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-accent to-primary rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <CreditCard className=\"text-white h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">Secure Payment Processing</h3>\n                    <p className=\"text-muted-foreground\">Complete your booking with confidence using our encrypted payment system.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-primary to-secondary rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <BarChart3 className=\"text-white h-6 w-6\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-foreground mb-2\">Analytics Dashboard</h3>\n                    <p className=\"text-muted-foreground\">Access comprehensive analytics and booking history through your personal dashboard.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <img\n                src=\"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=800&h=600\"\n                alt=\"Professional dashboard interface\"\n                className=\"rounded-xl shadow-2xl\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":10401},"client/src/pages/jets.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport AircraftCard from \"@/components/aircraft-card\";\nimport { Search, Filter } from \"lucide-react\";\nimport type { Aircraft } from \"@shared/schema\";\n\nexport default function Jets() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [categoryFilter, setCategoryFilter] = useState<string>(\"all\");\n  const [sortBy, setSortBy] = useState<string>(\"hourlyRate\");\n\n  const { data: aircraft = [], isLoading } = useQuery<Aircraft[]>({\n    queryKey: [\"/api/aircraft\"],\n  });\n\n  const filteredAircraft = aircraft\n    .filter((jet) => {\n      const matchesSearch = \n        jet.model.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        jet.manufacturer.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesCategory = categoryFilter === \"all\" || jet.category === categoryFilter;\n      return matchesSearch && matchesCategory;\n    })\n    .sort((a, b) => {\n      switch (sortBy) {\n        case \"hourlyRate\":\n          return parseFloat(a.hourlyRate) - parseFloat(b.hourlyRate);\n        case \"passengers\":\n          return b.passengers - a.passengers;\n        case \"range\":\n          return b.range - a.range;\n        case \"speed\":\n          return b.speed - a.speed;\n        default:\n          return 0;\n      }\n    });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"mt-4 text-muted-foreground\">Loading aircraft...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Our Aircraft Fleet\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Explore our comprehensive collection of luxury private jets, from light jets for short trips to ultra-long-range aircraft for international travel.\n          </p>\n        </div>\n\n        {/* Filters */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Filter className=\"h-5 w-5\" />\n              Filter & Search\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid md:grid-cols-4 gap-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\n                <Input\n                  placeholder=\"Search aircraft...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                  data-testid=\"input-search-aircraft\"\n                />\n              </div>\n              \n              <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n                <SelectTrigger data-testid=\"select-category-filter\">\n                  <SelectValue placeholder=\"All Categories\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Categories</SelectItem>\n                  <SelectItem value=\"light\">Light Jets</SelectItem>\n                  <SelectItem value=\"midsize\">Midsize Jets</SelectItem>\n                  <SelectItem value=\"heavy\">Heavy Jets</SelectItem>\n                  <SelectItem value=\"ultra\">Ultra Long Range</SelectItem>\n                </SelectContent>\n              </Select>\n\n              <Select value={sortBy} onValueChange={setSortBy}>\n                <SelectTrigger data-testid=\"select-sort-by\">\n                  <SelectValue placeholder=\"Sort By\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"hourlyRate\">Price (Low to High)</SelectItem>\n                  <SelectItem value=\"passengers\">Passengers (High to Low)</SelectItem>\n                  <SelectItem value=\"range\">Range (High to Low)</SelectItem>\n                  <SelectItem value=\"speed\">Speed (High to Low)</SelectItem>\n                </SelectContent>\n              </Select>\n\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  setSearchTerm(\"\");\n                  setCategoryFilter(\"all\");\n                  setSortBy(\"hourlyRate\");\n                }}\n                data-testid=\"button-clear-filters\"\n              >\n                Clear Filters\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Results */}\n        <div className=\"mb-6\">\n          <p className=\"text-muted-foreground\">\n            Showing {filteredAircraft.length} of {aircraft.length} aircraft\n          </p>\n        </div>\n\n        {/* Aircraft Grid */}\n        {filteredAircraft.length === 0 ? (\n          <Card className=\"p-12 text-center\">\n            <div className=\"text-muted-foreground\">\n              <Search className=\"h-16 w-16 mx-auto mb-4 opacity-50\" />\n              <h3 className=\"text-xl font-semibold mb-2\">No Aircraft Found</h3>\n              <p>Try adjusting your search criteria or filters.</p>\n            </div>\n          </Card>\n        ) : (\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {filteredAircraft.map((jet) => (\n              <AircraftCard key={jet.id} aircraft={jet} />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":6006},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/search.tsx":{"content":"import { useState } from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport FlightSearchForm from \"@/components/flight-search-form\";\nimport AircraftCard from \"@/components/aircraft-card\";\nimport { AlertCircle, Search as SearchIcon } from \"lucide-react\";\nimport type { Aircraft } from \"@shared/schema\";\n\nexport default function Search() {\n  const [searchResults, setSearchResults] = useState<Aircraft[]>([]);\n  const [hasSearched, setHasSearched] = useState(false);\n\n  const handleSearchResults = (results: Aircraft[]) => {\n    setSearchResults(results);\n    setHasSearched(true);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Search Flights\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n            Find the perfect private jet for your journey with our advanced search filters.\n          </p>\n        </div>\n\n        {/* Search Form */}\n        <div className=\"mb-12\">\n          <FlightSearchForm onSearchResults={handleSearchResults} />\n        </div>\n\n        {/* Search Results */}\n        {hasSearched && (\n          <div className=\"space-y-8\">\n            <div className=\"border-t border-border pt-8\">\n              <h2 className=\"text-2xl font-bold text-foreground mb-2\">\n                Search Results\n              </h2>\n              <p className=\"text-muted-foreground mb-6\">\n                Found {searchResults.length} available aircraft for your search criteria\n              </p>\n\n              {searchResults.length === 0 ? (\n                <Card className=\"p-12 text-center\">\n                  <div className=\"text-muted-foreground\">\n                    <AlertCircle className=\"h-16 w-16 mx-auto mb-4 opacity-50\" />\n                    <h3 className=\"text-xl font-semibold mb-2\">No Flights Available</h3>\n                    <p className=\"max-w-md mx-auto\">\n                      We couldn't find any aircraft matching your search criteria. \n                      Try adjusting your departure/arrival locations, dates, or passenger count.\n                    </p>\n                  </div>\n                </Card>\n              ) : (\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                  {searchResults.map((aircraft) => (\n                    <AircraftCard\n                      key={aircraft.id}\n                      aircraft={aircraft}\n                      onBook={(aircraft) => {\n                        // TODO: Implement booking flow\n                        console.log(\"Book aircraft:\", aircraft);\n                      }}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* Empty State */}\n        {!hasSearched && (\n          <Card className=\"p-12 text-center bg-muted/30\">\n            <div className=\"text-muted-foreground\">\n              <SearchIcon className=\"h-16 w-16 mx-auto mb-4 opacity-50\" />\n              <h3 className=\"text-xl font-semibold mb-2\">Ready to Search</h3>\n              <p className=\"max-w-md mx-auto\">\n                Enter your travel details above to find available private jets for your journey.\n              </p>\n            </div>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":3480},"client/src/pages/track.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Search, MapPin, Clock, Plane, AlertCircle } from \"lucide-react\";\nimport type { Flight } from \"@shared/schema\";\n\nexport default function Track() {\n  const [flightId, setFlightId] = useState(\"\");\n  const [searchedFlightId, setSearchedFlightId] = useState(\"\");\n\n  const { data: flight, isLoading, error } = useQuery<Flight>({\n    queryKey: [\"/api/flights\", searchedFlightId],\n    enabled: !!searchedFlightId,\n  });\n\n  const handleSearch = () => {\n    if (flightId.trim()) {\n      setSearchedFlightId(flightId.trim());\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"confirmed\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      case \"pending\":\n        return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case \"completed\":\n        return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"cancelled\":\n        return \"bg-red-100 text-red-800 border-red-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background py-8\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Flight Tracking\n          </h1>\n          <p className=\"text-xl text-muted-foreground\">\n            Track your private jet flight in real-time with live updates and status information.\n          </p>\n        </div>\n\n        {/* Search Form */}\n        <Card className=\"mb-8\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Search className=\"h-5 w-5\" />\n              Track Your Flight\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex gap-4\">\n              <Input\n                placeholder=\"Enter flight ID or booking reference\"\n                value={flightId}\n                onChange={(e) => setFlightId(e.target.value)}\n                className=\"flex-1\"\n                data-testid=\"input-flight-id\"\n                onKeyPress={(e) => e.key === \"Enter\" && handleSearch()}\n              />\n              <Button\n                onClick={handleSearch}\n                disabled={!flightId.trim() || isLoading}\n                data-testid=\"button-track-flight\"\n              >\n                {isLoading ? \"Tracking...\" : \"Track Flight\"}\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Flight Information */}\n        {error && (\n          <Card className=\"mb-8 border-destructive\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center gap-3 text-destructive\">\n                <AlertCircle className=\"h-5 w-5\" />\n                <div>\n                  <h3 className=\"font-semibold\">Flight Not Found</h3>\n                  <p className=\"text-sm\">Please check your flight ID and try again.</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n        {flight && (\n          <div className=\"space-y-6\">\n            {/* Flight Status */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                  <span>Flight Status</span>\n                  <Badge className={getStatusColor(flight.status || \"pending\")}>\n                    {flight.status?.toUpperCase() || \"PENDING\"}\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center\">\n                        <Plane className=\"h-5 w-5 text-primary rotate-45\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">Departure</p>\n                        <p className=\"font-semibold\" data-testid=\"flight-departure\">\n                          {flight.departure}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-10 h-10 bg-accent/10 rounded-full flex items-center justify-center\">\n                        <MapPin className=\"h-5 w-5 text-accent\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">Arrival</p>\n                        <p className=\"font-semibold\" data-testid=\"flight-arrival\">\n                          {flight.arrival}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-10 h-10 bg-secondary/10 rounded-full flex items-center justify-center\">\n                        <Clock className=\"h-5 w-5 text-secondary\" />\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">Departure Date</p>\n                        <p className=\"font-semibold\" data-testid=\"flight-departure-date\">\n                          {new Date(flight.departureDate).toLocaleDateString()}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    {flight.returnDate && (\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-10 h-10 bg-secondary/10 rounded-full flex items-center justify-center\">\n                          <Clock className=\"h-5 w-5 text-secondary\" />\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-muted-foreground\">Return Date</p>\n                          <p className=\"font-semibold\" data-testid=\"flight-return-date\">\n                            {new Date(flight.returnDate).toLocaleDateString()}\n                          </p>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Flight Details */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Flight Details</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid md:grid-cols-3 gap-6\">\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Flight ID</p>\n                    <p className=\"font-semibold\" data-testid=\"flight-id\">{flight.id}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Passengers</p>\n                    <p className=\"font-semibold\" data-testid=\"flight-passengers\">{flight.passengers}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground\">Trip Type</p>\n                    <p className=\"font-semibold capitalize\" data-testid=\"flight-trip-type\">\n                      {flight.tripType === \"oneway\" ? \"One Way\" : \"Round Trip\"}\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Live Updates */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Live Updates</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2\"></div>\n                    <div>\n                      <p className=\"font-medium\">Flight Confirmed</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Your flight has been confirmed and aircraft assigned.\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        {new Date(flight.createdAt!).toLocaleString()}\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2\"></div>\n                    <div>\n                      <p className=\"font-medium\">Booking Created</p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Flight booking has been successfully created.\n                      </p>\n                      <p className=\"text-xs text-muted-foreground mt-1\">\n                        {new Date(flight.createdAt!).toLocaleString()}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n\n        {/* Empty State */}\n        {!searchedFlightId && (\n          <Card className=\"p-12 text-center bg-muted/30\">\n            <div className=\"text-muted-foreground\">\n              <Plane className=\"h-16 w-16 mx-auto mb-4 opacity-50\" />\n              <h3 className=\"text-xl font-semibold mb-2\">Track Your Flight</h3>\n              <p className=\"max-w-md mx-auto\">\n                Enter your flight ID or booking reference above to get real-time updates on your private jet journey.\n              </p>\n            </div>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":10097},"client/src/components/layout/footer.tsx":{"content":"import { Plane, Facebook, Twitter, Instagram, Phone, Mail, MapPin } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-primary text-primary-foreground py-16\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          <div className=\"space-y-4\">\n            <h3 className=\"text-2xl font-bold\">\n              <Plane className=\"inline mr-2 h-6 w-6\" />\n              JetCharter\n            </h3>\n            <p className=\"text-primary-foreground/80 max-w-xs\">\n              Your premier destination for luxury private jet charter services worldwide.\n            </p>\n            <div className=\"flex space-x-4\">\n              <button className=\"w-10 h-10 bg-primary-foreground/10 rounded-lg flex items-center justify-center hover:bg-primary-foreground/20 transition-colors duration-200\">\n                <Facebook className=\"h-5 w-5\" />\n              </button>\n              <button className=\"w-10 h-10 bg-primary-foreground/10 rounded-lg flex items-center justify-center hover:bg-primary-foreground/20 transition-colors duration-200\">\n                <Twitter className=\"h-5 w-5\" />\n              </button>\n              <button className=\"w-10 h-10 bg-primary-foreground/10 rounded-lg flex items-center justify-center hover:bg-primary-foreground/20 transition-colors duration-200\">\n                <Instagram className=\"h-5 w-5\" />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <h4 className=\"text-lg font-semibold\">Services</h4>\n            <ul className=\"space-y-2 text-primary-foreground/80\">\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Flight Search\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Aircraft Fleet\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Flight Tracking\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Empty Leg Deals\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"space-y-4\">\n            <h4 className=\"text-lg font-semibold\">Support</h4>\n            <ul className=\"space-y-2 text-primary-foreground/80\">\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Help Center\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Contact Us\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Safety Information\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"hover:text-primary-foreground transition-colors duration-200\">\n                  Terms of Service\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"space-y-4\">\n            <h4 className=\"text-lg font-semibold\">Contact</h4>\n            <div className=\"space-y-3 text-primary-foreground/80\">\n              <div className=\"flex items-center space-x-3\">\n                <Phone className=\"h-5 w-5\" />\n                <span>+1 (555) 123-4567</span>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <Mail className=\"h-5 w-5\" />\n                <span>info@jetcharter.com</span>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <MapPin className=\"h-5 w-5\" />\n                <span>New York, NY</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"border-t border-primary-foreground/20 mt-12 pt-8 text-center\">\n          <p className=\"text-primary-foreground/60\">\n            © 2024 JetCharter. All rights reserved. | Privacy Policy | Terms of Service\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":4516},"client/src/components/layout/navbar.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Plane, Menu } from \"lucide-react\";\n\nexport default function Navbar() {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const navItems = [\n    { href: \"/\", label: \"Home\" },\n    { href: \"/jets\", label: \"Jets\" },\n    { href: \"/search\", label: \"Search\" },\n    { href: \"/track\", label: \"Track\" },\n    { href: \"/deals\", label: \"Deals\" },\n    { href: \"/dashboard\", label: \"Dashboard\" },\n  ];\n\n  const NavLink = ({ href, label }: { href: string; label: string }) => (\n    <Link href={href}>\n      <button\n        className={`font-medium transition-colors duration-200 ${\n          location === href\n            ? \"text-primary\"\n            : \"text-muted-foreground hover:text-primary\"\n        }`}\n        data-testid={`nav-link-${label.toLowerCase()}`}\n      >\n        {label}\n      </button>\n    </Link>\n  );\n\n  return (\n    <nav className=\"bg-white/95 backdrop-blur-md border-b border-border sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16 lg:h-20\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\">\n              <h1 className=\"text-2xl lg:text-3xl font-bold bg-gradient-to-r from-primary to-accent bg-clip-text text-transparent cursor-pointer\">\n                <Plane className=\"inline mr-2 h-8 w-8 text-primary\" />\n                JetCharter\n              </h1>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:block\">\n            <div className=\"ml-10 flex items-baseline space-x-8\">\n              {navItems.map((item) => (\n                <NavLink key={item.href} href={item.href} label={item.label} />\n              ))}\n            </div>\n          </div>\n\n          <div className=\"hidden md:block\">\n            <Button\n              className=\"bg-primary text-primary-foreground hover:bg-primary/90\"\n              data-testid=\"button-book-now\"\n            >\n              Book Now\n            </Button>\n          </div>\n\n          {/* Mobile Navigation */}\n          <div className=\"md:hidden\">\n            <Sheet open={isOpen} onOpenChange={setIsOpen}>\n              <SheetTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\" data-testid=\"button-mobile-menu\">\n                  <Menu className=\"h-6 w-6\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n                <div className=\"flex flex-col space-y-4 mt-8\">\n                  {navItems.map((item) => (\n                    <Link key={item.href} href={item.href}>\n                      <button\n                        className={`w-full text-left py-2 px-4 rounded-lg font-medium transition-colors duration-200 ${\n                          location === item.href\n                            ? \"bg-primary/10 text-primary\"\n                            : \"text-muted-foreground hover:text-primary hover:bg-muted\"\n                        }`}\n                        onClick={() => setIsOpen(false)}\n                        data-testid={`mobile-nav-link-${item.label.toLowerCase()}`}\n                      >\n                        {item.label}\n                      </button>\n                    </Link>\n                  ))}\n                  <Button\n                    className=\"mt-4 bg-primary text-primary-foreground hover:bg-primary/90\"\n                    data-testid=\"mobile-button-book-now\"\n                  >\n                    Book Now\n                  </Button>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":3906},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}